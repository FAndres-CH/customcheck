{"version":3,"sources":["App_2.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","button","App","classes","useState","id","uuidv4","brand","style","type","state","updateNeeded","retrofit","tuneup","investment","others","machines","setmachines","usageYear","satisfaction","discription","medias","setmedias","customer_companyname","customer_descript","need_sales","customer_contact_name","customer_contact_mail","customer_contact_phone","surround","setsurround","handleSubmit","e","preventDefault","console","log","handleChangeInputMachine","event","newMachines","map","i","target","name","value","handleChangeStarMachine","handleChangeStarMedia","newMedia","handleChangeInputMedia","handleChangeSurround","newSurround","handleRemoveFieldsMachines","length","values","splice","findIndex","handleRemoveFieldsMedias","Container","className","onSubmit","TextField","label","variant","onChange","count","size","isHalf","emptyIcon","halfIcon","fullIcon","activeColor","placeholder","IconButton","disabled","onClick","color","Button","endIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc058a67.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/DeleteForever';\nimport AddIcon from '@material-ui/icons/AddCircle';\nimport SendIcon from '@material-ui/icons/Send';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactStars from \"react-rating-stars-component\";\nimport './App_2.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  const [machines, setmachines] = useState([\n    { id: uuidv4(), brand: '', style: '', type: '', state: 0, updateNeeded: 'unknown', retrofit: 'unknown', tuneup: 'unknown', investment: '', others: '' },\n  ]);\n  const [medias, setmedias] = useState([\n    { id: uuidv4(), brand: '', type: '', usageYear: '', satisfaction: 0, discription: '' },\n  ]);\n\n  const [surround, setsurround] = useState([\n    { customer_companyname: '', customer_descript: '', need_sales: '',  customer_contact_name: '', customer_contact_mail: '' , customer_contact_phone: ''},\n  ]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Machines\", machines);\n    console.log(\"Medias\", medias);\n  };\n\n\n  const handleChangeInputMachine = (id, event) => {\n    const newMachines = machines.map(i => {\n      if (id === i.id) {\n        console.log(event.target)\n        i[event.target.name] = event.target.value\n      }\n      return i;\n    })\n\n    setmachines(newMachines);\n  }\n\n  const handleChangeStarMachine = (id, event) => {\n    console.log(event)\n    const newMachines = machines.map(i => {\n      if (id === i.id) {\n        console.log(event.target)\n        i['state'] = event\n      }\n      return i;\n    })\n\n    setmachines(newMachines);\n  }\n\n  const handleChangeStarMedia = (id, event) => {\n    const newMedia = medias.map(i => {\n      if (id === i.id) {\n        i['satisfaction'] = event\n      }\n      return i;\n    })\n\n    setmedias(newMedia);\n  }\n\n  const handleChangeInputMedia = (id, event) => {\n    const newMedia = medias.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value\n      }\n      return i;\n    })\n\n    setmedias(newMedia);\n  }\n\n  const handleChangeSurround = (event) => {\n    const newSurround = surround.map(i => {\n        i[event.target.name] = event.target.value\n      return i;\n    })\n\n    setsurround(newSurround);\n  }\n\n  const handleAddFieldsMachines = () => {\n    setmachines([...machines, { id: uuidv4(), brand: '', style: '', type: '', state: 0, updateNeeded: 'unknown', retrofit: 'unknown', tuneup: 'unknown', investment: '', others: '' }])\n  }\n\n  const handleAddFieldsMedias = () => {\n    setmedias([...medias, { id: uuidv4(), brand: '', type: '', usageYear: '', satisfaction: 0, discription: '' }])\n  }\n\n  const handleRemoveFieldsMachines = id => {\n    console.log(machines.length)\n    if (machines.length >= 2) {\n      const values = [...machines];\n      values.splice(values.findIndex(value => value.id === id), 1);\n      setmachines(values);\n    }\n  }\n\n  const handleRemoveFieldsMedias = id => {\n    console.log(medias.length)\n    if (medias.length >= 2) {\n      const values = [...medias];\n      values.splice(values.findIndex(value => value.id === id), 1);\n      setmedias(values);\n    }\n  }\n\n  return (\n    <Container>\n      <h1>Kunden Check</h1>\n      <form className={classes.root} onSubmit={handleSubmit}> {/* onSubmit={handleSubmit}, action=\"https://httpbin.org/post\" method=\"post\" */}\n      <h2>Kundenangaben</h2>\n      <div className=\"customer\">\n      <TextField\n                name=\"customer_companyname\"\n                label=\"Kunde\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={surround.customer_companyname}\n                onChange={event => handleChangeSurround(event)}\n              />\n        <TextField\n                name=\"customer_descript\"\n                label=\"Standortbeschreibung\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={surround.customer_descript}\n                onChange={event => handleChangeSurround(event)}\n              />\n</div>\n\n        <h2>Anlagen</h2>\n        {machines.map(machines => (\n          <div className=\"machines\" key={machines.id}>\n            <label className=\"form-group\">Anlagenart <select className=\"form-control\" name=\"style\" onChange={event => handleChangeInputMachine(machines.id, event)}>\n              <option value=\"unknown\">\n                Bitte Wählen\n              </option>\n              <option value=\"mass finishing\">\n                Gleitschleifen\n              </option>\n              <option value=\"blasting\">\n                Strahlen\n              </option>\n            </select></label>\n            <TextField\n              name=\"brand\"\n              label=\"Hersteller\"\n              variant=\"filled\"\n              className=\"from-textfield\"\n              value={machines.brand}\n              onChange={event => handleChangeInputMachine(machines.id, event)}\n            />\n            \n            <TextField\n              name=\"type\"\n              label=\"Typ\"\n              variant=\"filled\"\n              className=\"from-textfield\"\n              value={machines.type}\n              onChange={event => handleChangeInputMachine(machines.id, event)}\n            />\n            <div className=\"form-rate\">\n              <label>Zustand\n              <ReactStars\n                count={5}\n                onChange={event => handleChangeStarMachine(machines.id, event)}\n                size={24}\n                isHalf={true}\n                emptyIcon={<i className=\"far fa-star\"></i>}\n                halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                fullIcon={<i className=\"fa fa-star\"></i>}\n                activeColor=\"#ffab2e\"\n              /></label>\n            </div>\n            <div className=\"form-group\">\n              <label>Analge erneuerungsbedürftig? <select className=\"form-control\" name=\"updateNeeded\" onChange={event => handleChangeInputMachine(machines.id, event)}>\n                <option value=\"unknown\">\n                  Bitte Wählen\n                </option>\n\n                <option value=\"no\">\n                  Nein\n                </option>\n\n                <option value=\"yes\">\n                  Ja\n                </option>\n              </select></label> \n            </div>\n            <div className=\"form-group\">\n              <label>Interesse an Retrofit? <i>Karte abgegeben?</i> <select className=\"form-control\" name=\"retrofit\" onChange={event => handleChangeInputMachine(machines.id, event)}>\n                <option value=\"unknown\">\n                  Bitte Wählen\n                </option>\n\n                <option value=\"no\">\n                  Nein\n                </option>\n\n                <option value=\"yes\">\n                  Ja\n                </option>\n              </select></label>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Interesse an TuneUp? <i>Karte abgegeben?</i> <select className=\"form-control\" name=\"tuneup\" onChange={event => handleChangeInputMachine(machines.id, event)}>\n                <option value=\"unknown\">\n                  Bitte Wählen\n                </option>\n\n                <option value=\"no\">\n                  Nein\n                </option>\n\n                <option value=\"yes\">\n                  Ja\n                </option>\n              </select></label>\n            </div>\n            <TextField\n              name=\"investment\"\n              label=\"Investment geplant?\"\n              variant=\"filled\"\n              value={machines.investment}\n              onChange={event => handleChangeInputMachine(machines.id, event)}\n            />\n\n            <label>\n              <textarea name=\"others\"\n                label=\"Sonstiges\"\n                placeholder=\"Sonstiges\"\n                variant=\"filled\"\n                value={machines.others}\n                onChange={event => handleChangeInputMachine(machines.id, event)} />\n            </label>\n            <IconButton disabled={machines.length === 1} onClick={() => handleRemoveFieldsMachines(machines.id)}>\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n        <IconButton\n          onClick={handleAddFieldsMachines}\n        >\n          <AddIcon />\n        </IconButton>\n\n\n\n        <div>\n          <h2>Verbrauchsmittel</h2>\n\n          <div className=\"media\">\n\n            <label>Fremdprodukt(e) <select className=\"form-control\" name=\"selectbox_otherProducts\" onChange={event => handleChangeInputMedia(medias.id, event)}>\n              <option value=\"unknown\">\n                Bitte Wählen\n              </option>\n\n              <option value=\"no\">\n                Nein\n              </option>\n\n              <option value=\"yes\">\n                Ja\n              </option>\n            </select></label>\n          </div>\n\n          {medias.map(medias => (\n            <div className=\"medias\" key={medias.id}>\n              <TextField\n                name=\"brand\"\n                label=\"Hersteller\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={medias.brand}\n                onChange={event => handleChangeInputMedia(medias.id, event)}\n              />\n              <TextField\n                name=\"type\"\n                label=\"Typ\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={medias.type}\n                onChange={event => handleChangeInputMedia(medias.id, event)}\n              />\n\n              <TextField\n                name=\"usageYear\"\n                label=\"Jahresverbrauch\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={medias.usageYear}\n                onChange={event => handleChangeInputMedia(medias.id, event)}\n              />\n              <label className=\"form-rate\">Zufriedenheit\n              <ReactStars\n                  count={5}\n                  onChange={event => handleChangeStarMedia(medias.id, event)}\n                  size={24}\n                  isHalf={true}\n                  emptyIcon={<i className=\"far fa-star\"></i>}\n                  halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                  fullIcon={<i className=\"fa fa-star\"></i>}\n                  activeColor=\"#ffab2e\"\n                  color=\"#999999\"\n                /></label>\n              <label>\n                <textarea name=\"discription\"\n                  label=\"Beschreibung\"\n                  placeholder=\"Beschreibung Zufriedenheit\"\n                  variant=\"filled\"\n                  value={medias.discription}\n                  onChange={event => handleChangeInputMedia(medias.id, event)} />\n              </label>\n\n              <IconButton disabled={medias.length === 1} onClick={() => handleRemoveFieldsMedias(medias.id)}>\n                <RemoveIcon />\n              </IconButton>\n            </div>))}\n\n\n          <IconButton\n            onClick={handleAddFieldsMedias}\n          >\n            <AddIcon />\n          </IconButton>\n\n        </div>\n        <div>\n            <h2>Verkauf</h2>\n<div className=\"sales\">\n<label className=\"form-group\">Kunde wünscht Kontaktaufnahme<select className=\"form-control\" name=\"need_sales\"  onChange={event => handleChangeSurround( event)}>\n              <option value=\"unknown\">\n                Bitte Wählen\n              </option>\n              <option value=\"no\">\n                Nein\n              </option>\n\n              <option value=\"yes\">\n                Ja\n              </option>\n            </select></label> \n            <TextField\n                name=\"customer_contact_name\"\n                label=\"Kontaktperson\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={surround.customer_contact_name}\n                onChange={event => handleChangeSurround(event)}\n              />\n              <TextField\n                name=\"customer_contact_mail\"\n                label=\"Mail\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={surround.customer_contact_mail}\n                onChange={event => handleChangeSurround(event)}\n              />\n              <TextField\n                name=\"customer_contact_phone\"\n                label=\"Phone\"\n                variant=\"filled\"\n                className=\"from-textfield\"\n                value={surround.customer_contact_phone}\n                onChange={event => handleChangeSurround(event)}\n              />\n</div>\n        </div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          endIcon={<SendIcon/>}\n          onClick={handleSubmit}\n        >Send</Button>\n      </form>{/* onClick={handleSubmit}, value=\"send\"  */}\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App_2';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}